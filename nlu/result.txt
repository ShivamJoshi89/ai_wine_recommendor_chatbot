(wine_env) PS C:\Users\shiva\Desktop\project\ai_wine_recommendor_chatbot> & c:/Users/shiva/Desktop/project/ai_wine_recommendor_chatbot/wine_env/Scripts/python.exe c:/Users/shiva/Desktop/project/ai_wine_recommendor_chatbot/nlu/ner.py
Map: 100%|â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆ| 120/120 [00:00<00:00, 5869.79 examples/s]
Map: 100%|â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆ| 30/30 [00:00<00:00, 5909.13 examples/s]
Map: 100%|â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆ| 120/120 [00:00<00:00, 38725.59 examples/s]
Map: 100%|â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆ| 30/30 [00:00<00:00, 10026.22 examples/s]
Some weights of DistilBertForSequenceClassification were not initialized from the model checkpoint at distilbert-base-uncased and are newly initialized: ['classifier.bias', 'classifier.weight', 'pre_classifier.bias', 'pre_classifier.weight']
You should probably TRAIN this model on a down-stream task to be able to use it for predictions and inference.
C:\Users\shiva\Desktop\project\ai_wine_recommendor_chatbot\wine_env\Lib\site-packages\transformers\training_args.py:1611: FutureWarning: `evaluation_strategy` is deprecated and will be removed in version 4.46 of ðŸ¤— Transformers. Use `eval_strategy` instead
  warnings.warn(
c:\Users\shiva\Desktop\project\ai_wine_recommendor_chatbot\nlu\ner.py:93: FutureWarning: `tokenizer` is deprecated and will be removed in version 5.0.0 for `Trainer.__init__`. Use `processing_class` instead.
  trainer_intent = Trainer(
Training intent classifier...
{'loss': 1.0676, 'grad_norm': 4.418252944946289, 'learning_rate': 1.7777777777777777e-05, 'epoch': 0.33}
{'loss': 0.9317, 'grad_norm': 4.765788555145264, 'learning_rate': 1.555555555555556e-05, 'epoch': 0.67}                                                                                                         
{'loss': 0.7682, 'grad_norm': 4.716704845428467, 'learning_rate': 1.3333333333333333e-05, 'epoch': 1.0}                                                                                                         
{'eval_loss': 0.6415042877197266, 'eval_runtime': 0.1009, 'eval_samples_per_second': 297.395, 'eval_steps_per_second': 79.305, 'epoch': 1.0}                                                                    
{'loss': 0.5852, 'grad_norm': 3.529062509536743, 'learning_rate': 1.1111111111111113e-05, 'epoch': 1.33}                                                                                                        
{'loss': 0.4027, 'grad_norm': 3.8725154399871826, 'learning_rate': 8.888888888888888e-06, 'epoch': 1.67}
{'loss': 0.2797, 'grad_norm': 2.3369967937469482, 'learning_rate': 6.666666666666667e-06, 'epoch': 2.0}                                                                                                         
{'eval_loss': 0.22029231488704681, 'eval_runtime': 0.0901, 'eval_samples_per_second': 333.096, 'eval_steps_per_second': 88.826, 'epoch': 2.0}                                                                   
{'loss': 0.2172, 'grad_norm': 1.6312631368637085, 'learning_rate': 4.444444444444444e-06, 'epoch': 2.33}                                                                                                        
{'loss': 0.1743, 'grad_norm': 1.450439214706421, 'learning_rate': 2.222222222222222e-06, 'epoch': 2.67}
{'loss': 0.1556, 'grad_norm': 1.4104586839675903, 'learning_rate': 0.0, 'epoch': 3.0}                                                                                                                           
{'eval_loss': 0.13436825573444366, 'eval_runtime': 0.0866, 'eval_samples_per_second': 346.468, 'eval_steps_per_second': 92.391, 'epoch': 3.0}                                                                   
{'train_runtime': 7.4501, 'train_samples_per_second': 48.322, 'train_steps_per_second': 12.08, 'train_loss': 0.5091513117154439, 'epoch': 3.0}                                                                  
100%|â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆ| 90/90 [00:07<00:00, 12.08it/s] 
100%|â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆ| 8/8 [00:00<00:00, 117.30it/s]
Intent Evaluation: {'eval_loss': 0.13436825573444366, 'eval_runtime': 0.0821, 'eval_samples_per_second': 365.422, 'eval_steps_per_second': 97.446, 'epoch': 3.0}
Device set to use cuda:0
Some weights of BertForTokenClassification were not initialized from the model checkpoint at bert-base-uncased and are newly initialized: ['classifier.bias', 'classifier.weight']
You should probably TRAIN this model on a down-stream task to be able to use it for predictions and inference.
C:\Users\shiva\Desktop\project\ai_wine_recommendor_chatbot\wine_env\Lib\site-packages\transformers\training_args.py:1611: FutureWarning: `evaluation_strategy` is deprecated and will be removed in version 4.46 of ðŸ¤— Transformers. Use `eval_strategy` instead
  warnings.warn(
c:\Users\shiva\Desktop\project\ai_wine_recommendor_chatbot\nlu\ner.py:187: FutureWarning: `tokenizer` is deprecated and will be removed in version 5.0.0 for `Trainer.__init__`. Use `processing_class` instead.
  trainer_entity = Trainer(
Training entity extraction model...
{'loss': 2.0246, 'grad_norm': 5.454448699951172, 'learning_rate': 1.9333333333333333e-05, 'epoch': 0.17}
{'loss': 1.3917, 'grad_norm': 4.6363301277160645, 'learning_rate': 1.866666666666667e-05, 'epoch': 0.33}                                                                                                        
{'loss': 0.8158, 'grad_norm': 3.6429054737091064, 'learning_rate': 1.8e-05, 'epoch': 0.5}                                                                                                                       
{'loss': 0.5695, 'grad_norm': 3.232337236404419, 'learning_rate': 1.7333333333333336e-05, 'epoch': 0.67}                                                                                                        
{'loss': 0.3395, 'grad_norm': 2.0899364948272705, 'learning_rate': 1.6666666666666667e-05, 'epoch': 0.83}                                                                                                       
{'loss': 0.2797, 'grad_norm': 1.1019490957260132, 'learning_rate': 1.6000000000000003e-05, 'epoch': 1.0}
{'eval_loss': 0.15248002111911774, 'eval_runtime': 0.7879, 'eval_samples_per_second': 152.309, 'eval_steps_per_second': 19.039, 'epoch': 1.0}                                                                   
{'loss': 0.1569, 'grad_norm': 1.1474502086639404, 'learning_rate': 1.5333333333333334e-05, 'epoch': 1.17}                                                                                                       
{'loss': 0.1132, 'grad_norm': 1.9389101266860962, 'learning_rate': 1.4666666666666666e-05, 'epoch': 1.33}
{'loss': 0.0679, 'grad_norm': 1.570259690284729, 'learning_rate': 1.4e-05, 'epoch': 1.5}                                                                                                                        
{'loss': 0.048, 'grad_norm': 0.4480403959751129, 'learning_rate': 1.3333333333333333e-05, 'epoch': 1.67}                                                                                                        
{'loss': 0.0342, 'grad_norm': 0.18240699172019958, 'learning_rate': 1.2666666666666667e-05, 'epoch': 1.83}                                                                                                      
{'loss': 0.0254, 'grad_norm': 0.14381496608257294, 'learning_rate': 1.2e-05, 'epoch': 2.0}                                                                                                                      
{'eval_loss': 0.010358901694417, 'eval_runtime': 0.8644, 'eval_samples_per_second': 138.83, 'eval_steps_per_second': 17.354, 'epoch': 2.0}                                                                      
{'loss': 0.0167, 'grad_norm': 0.40153032541275024, 'learning_rate': 1.1333333333333334e-05, 'epoch': 2.17}                                                                                                      
{'loss': 0.0158, 'grad_norm': 0.23089830577373505, 'learning_rate': 1.0666666666666667e-05, 'epoch': 2.33}
{'loss': 0.0181, 'grad_norm': 0.11226964741945267, 'learning_rate': 1e-05, 'epoch': 2.5}                                                                                                                        
{'loss': 0.0133, 'grad_norm': 0.10076720267534256, 'learning_rate': 9.333333333333334e-06, 'epoch': 2.67}                                                                                                       
{'loss': 0.0128, 'grad_norm': 0.08518722653388977, 'learning_rate': 8.666666666666668e-06, 'epoch': 2.83}                                                                                                       
{'loss': 0.0163, 'grad_norm': 0.1851201057434082, 'learning_rate': 8.000000000000001e-06, 'epoch': 3.0}                                                                                                         
{'eval_loss': 0.004974280949681997, 'eval_runtime': 0.9082, 'eval_samples_per_second': 132.124, 'eval_steps_per_second': 16.515, 'epoch': 3.0}                                                                  
{'loss': 0.0085, 'grad_norm': 0.06313145905733109, 'learning_rate': 7.333333333333333e-06, 'epoch': 3.17}                                                                                                       
{'loss': 0.0098, 'grad_norm': 2.8119609355926514, 'learning_rate': 6.666666666666667e-06, 'epoch': 3.33}
{'loss': 0.0086, 'grad_norm': 0.09870143234729767, 'learning_rate': 6e-06, 'epoch': 3.5}                                                                                                                        
{'loss': 0.0095, 'grad_norm': 0.058374982327222824, 'learning_rate': 5.333333333333334e-06, 'epoch': 3.67}                                                                                                      
{'loss': 0.0094, 'grad_norm': 0.09984169900417328, 'learning_rate': 4.666666666666667e-06, 'epoch': 3.83}                                                                                                       
{'loss': 0.008, 'grad_norm': 0.07458749413490295, 'learning_rate': 4.000000000000001e-06, 'epoch': 4.0}                                                                                                         
{'eval_loss': 0.0033281557261943817, 'eval_runtime': 0.8255, 'eval_samples_per_second': 145.362, 'eval_steps_per_second': 18.17, 'epoch': 4.0}                                                                  
{'loss': 0.0086, 'grad_norm': 0.20711976289749146, 'learning_rate': 3.3333333333333333e-06, 'epoch': 4.17}                                                                                                      
{'loss': 0.0085, 'grad_norm': 0.0466037280857563, 'learning_rate': 2.666666666666667e-06, 'epoch': 4.33}
{'loss': 0.0073, 'grad_norm': 0.05551876500248909, 'learning_rate': 2.0000000000000003e-06, 'epoch': 4.5}                                                                                                       
{'loss': 0.007, 'grad_norm': 0.06574157625436783, 'learning_rate': 1.3333333333333334e-06, 'epoch': 4.67}                                                                                                       
{'loss': 0.0078, 'grad_norm': 0.20126120746135712, 'learning_rate': 6.666666666666667e-07, 'epoch': 4.83}                                                                                                       
{'loss': 0.0072, 'grad_norm': 0.08886822313070297, 'learning_rate': 0.0, 'epoch': 5.0}                                                                                                                          
{'eval_loss': 0.003003434743732214, 'eval_runtime': 0.8394, 'eval_samples_per_second': 142.961, 'eval_steps_per_second': 17.87, 'epoch': 5.0}                                                                   
{'train_runtime': 78.6307, 'train_samples_per_second': 30.522, 'train_steps_per_second': 3.815, 'train_loss': 0.20198065576454002, 'epoch': 5.0}                                                                
100%|â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆ| 300/300 [01:18<00:00,  3.82it/s]
100%|â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆ| 15/15 [00:00<00:00, 17.85it/s]
Entity Evaluation: {'eval_loss': 0.003003434743732214, 'eval_runtime': 0.8589, 'eval_samples_per_second': 139.713, 'eval_steps_per_second': 17.464, 'epoch': 5.0}
Device set to use cuda:0
Map:   0%|                                                                                                                                                                       | 0/15 [00:00<?, ? examples/s]You seem to be using the pipelines sequentially on GPU. In order to maximize efficiency please use a dataset
Map: 100%|â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆ| 15/15 [00:01<00:00, 14.85 examples/s]
{
  "Query 1": {
    "query": "Looking for an affordable Pinot Noir wine.",
    "nlu": {
      "entities_custom": [
        {
          "label": "GRAPE_VARIETY",
          "word": "pinot noir wine"
        }
      ],
      "entities_pipeline": [
        {
          "end": 41,
          "label": "GRAPE_VARIETY",
          "score": 0.8858822584152222,
          "start": 26,
          "word": "pinot noir wine"
        }
      ],
      "intent": "recommend_wine"
    }
  },
  "Query 2": {
    "query": "Suggest a white wine made from Chenin Blanc from France.",
    "nlu": {
      "entities_custom": [
        {
          "label": "GRAPE_VARIETY",
          "word": "chenin blanc"
        },
        {
          "label": "REGION",
          "word": "france"
        }
      ],
      "entities_pipeline": [
        {
          "end": 43,
          "label": "GRAPE_VARIETY",
          "score": 0.997628390789032,
          "start": 31,
          "word": "chenin blanc"
        },
        {
          "end": 56,
          "label": "REGION",
          "score": 0.5962698459625244,
          "start": 49,
          "word": "france"
        }
      ],
      "intent": "recommend_wine"
    }
  },
  "Query 3": {
    "query": "Can you recommend a red wine that pairs well with steak?",
    "nlu": {
      "entities_custom": [
        {
          "label": "FOOD_PAIRING",
          "word": "well with steak"
        }
      ],
      "entities_pipeline": [
        {
          "end": 44,
          "label": "FOOD_PAIRING",
          "score": 0.5506174564361572,
          "start": 40,
          "word": "well with steak"
        }
      ],
      "intent": "recommend_wine"
    }
  },
  "Query 4": {
    "query": "Can you recommend a fortified wine that pairs well with seafood?",
    "nlu": {
      "entities_custom": [
        {
          "label": "FOOD_PAIRING",
          "word": "well with seafood"
        }
      ],
      "entities_pipeline": [
        {
          "end": 50,
          "label": "FOOD_PAIRING",
          "score": 0.5433725118637085,
          "start": 46,
          "word": "well with seafood"
        }
      ],
      "intent": "recommend_wine"
    }
  },
  "Query 5": {
    "query": "What wine pairs well with seafood?",
    "nlu": {
      "entities_custom": [
        {
          "label": "FOOD_PAIRING",
          "word": "what wine pairs well with seafood"
        }
      ],
      "entities_pipeline": [
        {
          "end": 15,
          "label": "FOOD_PAIRING",
          "score": 0.555088460445404,
          "start": 10,
          "word": "pairs well with seafood"
        }
      ],
      "intent": "food_pairing"
    }
  },
  "Query 6": {
    "query": "What wine pairs well with poultry?",
    "nlu": {
      "entities_custom": [
        {
          "label": "FOOD_PAIRING",
          "word": "what wine pairs well with poultry"
        }
      ],
      "entities_pipeline": [
        {
          "end": 15,
          "label": "FOOD_PAIRING",
          "score": 0.5249766707420349,
          "start": 10,
          "word": "pairs well with poultry"
        }
      ],
      "intent": "food_pairing"
    }
  },
  "Query 7": {
    "query": "Can you recommend a red wine that pairs well with salad?",
    "nlu": {
      "entities_custom": [
        {
          "label": "FOOD_PAIRING",
          "word": "well with salad"
        }
      ],
      "entities_pipeline": [
        {
          "end": 44,
          "label": "FOOD_PAIRING",
          "score": 0.6076862812042236,
          "start": 40,
          "word": "well with salad"
        }
      ],
      "intent": "recommend_wine"
    }
  },
  "Query 8": {
    "query": "What wine pairs well with steak?",
    "nlu": {
      "entities_custom": [
        {
          "label": "FOOD_PAIRING",
          "word": "what wine pairs well with steak"
        }
      ],
      "entities_pipeline": [
        {
          "end": 15,
          "label": "FOOD_PAIRING",
          "score": 0.5500532984733582,
          "start": 10,
          "word": "pairs well with steak"
        }
      ],
      "intent": "food_pairing"
    }
  },
  "Query 9": {
    "query": "I need a premium wine from Oakville.",
    "nlu": {
      "entities_custom": [],
      "entities_pipeline": [],
      "intent": "recommend_wine"
    }
  },
  "Query 10": {
    "query": "What is a good Cabernet Sauvignon wine under $162?",
    "nlu": {
      "entities_custom": [
        {
          "label": "GRAPE_VARIETY",
          "word": "good cabernet savignon wine under 162"
        }
      ],
      "entities_pipeline": [
        {
          "end": 38,
          "label": "GRAPE_VARIETY",
          "score": 0.9915744066238403,
          "start": 15,
          "word": "cabernet sauvignon wine"
        },
        {
          "end": 50,
          "label": "PRICE_RANGE",
          "score": 0.7791106104850769,
          "start": 45,
          "word": "$ 162"
        }
      ],
      "intent": "recommend_wine"
    }
  },
  "Query 11": {
    "query": "Find me a premium red wine from Dry Creek Valley.",
    "nlu": {
      "entities_custom": [
        {
          "label": "WINE_TYPE",
          "word": "red wine"
        }
      ],
      "entities_pipeline": [
        {
          "end": 26,
          "label": "WINE_TYPE",
          "score": 0.9978951215744019,
          "start": 18,
          "word": "red wine"
        }
      ],
      "intent": "recommend_wine"
    }
  },
  "Query 12": {
    "query": "Suggest a white wine made from Chardonnay from France.",
    "nlu": {
      "entities_custom": [
        {
          "label": "GRAPE_VARIETY",
          "word": "chardonnay"
        },
        {
          "label": "REGION",
          "word": "france"
        }
      ],
      "entities_pipeline": [
        {
          "end": 41,
          "label": "GRAPE_VARIETY",
          "score": 0.9975547790527344,
          "start": 31,
          "word": "chardonnay"
        },
        {
          "end": 54,
          "label": "REGION",
          "score": 0.6101235151290894,
          "start": 47,
          "word": "france"
        }
      ],
      "intent": "recommend_wine"
    }
  },
  "Query 13": {
    "query": "Can you recommend a sparkling wine that pairs well with cheese?",
    "nlu": {
      "entities_custom": [
        {
          "label": "FOOD_PAIRING",
          "word": "well with cheese"
        }
      ],
      "entities_pipeline": [
        {
          "end": 50,
          "label": "FOOD_PAIRING",
          "score": 0.5534520149230957,
          "start": 46,
          "word": "well with cheese"
        }
      ],
      "intent": "recommend_wine"
    }
  },
  "Query 14": {
    "query": "What wine pairs well with dessert?",
    "nlu": {
      "entities_custom": [
        {
          "label": "FOOD_PAIRING",
          "word": "what wine pairs well with dessert"
        }
      ],
      "entities_pipeline": [
        {
          "end": 15,
          "label": "FOOD_PAIRING",
          "score": 0.6254971623420715,
          "start": 10,
          "word": "pairs well with dessert"
        }
      ],
      "intent": "food_pairing"
    }
  },
  "Query 15": {
    "query": "Can you recommend a red wine that pairs well with cheese?",
    "nlu": {
      "entities_custom": [
        {
          "label": "FOOD_PAIRING",
          "word": "well with cheese"
        }
      ],
      "entities_pipeline": [
        {
          "end": 44,
          "label": "FOOD_PAIRING",
          "score": 0.5513967275619507,
          "start": 40,
          "word": "well with cheese"
        }
      ],
      "intent": "recommend_wine"
    }
  }
}
Device set to use cuda:0

Processed NER Output from loaded pipeline for Query 1:
[
  {
    "label": "GRAPE_VARIETY",
    "word": "pinot noir wine",
    "score": 0.8858822584152222,
    "start": 26,
    "end": 41
  }
]